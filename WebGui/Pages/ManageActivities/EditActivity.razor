@page "/editactivity/{ActivityId:int}"

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudStack Spacing="16">
                <h1 class="ms-4">Edit Exercise</h1>

                <MudGrid Style="width: 100%;margin: 0">
                    <MudItem xs="12">
                        <MudPaper Class="pa-4">
                            <div @onkeydown="@TryAdd">
                                <MudForm @ref="_form">
                                    @if (_error is not null)
                                    {
                                        <MudAlert Severity="Severity.Error" ShowCloseIcon="true" CloseIconClicked="() => _error = null">
                                            @(_error)
                                        </MudAlert>
                                    }
                                    <div>
                                        <b>Name: </b>@Exercise.Name
                                    </div>
                                    <div>
                                        <b>Machine: </b>@Exercise.Machine
                                    </div>
                                    <div>
                                        <b>Description: </b>@Exercise.Description
                                    </div>
                                    <MudTextField
                                        T="decimal"
                                        InputMode="InputMode.text" InputType="InputType.Text" Immediate="true"
                                        Label="Weight"
                                        @bind-Value="Activity.Weight"
                                        For="() => Activity.Weight"/>
                                    <MudTextField
                                        T="int"
                                        InputMode="InputMode.text" InputType="InputType.Text" Immediate="true"
                                        Label="Set"
                                        @bind-Value="Activity.Set"
                                        For="() => Activity.Set"/>
                                    <MudTextField
                                        T="int"
                                        InputMode="InputMode.text" InputType="InputType.Text" Immediate="true"
                                        Label="Repetition"
                                        @bind-Value="Activity.Repetition"
                                        For="() => Activity.Repetition"/>
                                </MudForm>
                            </div>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudStack>
        </MudContainer>
        <div Style="position: fixed; bottom: 9vh; right: 2vh; display: grid; gap: 1rem;">
            <a href="/activityview">
                <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Check"/>
            </a>
        </div>
    </Authorized>
    <NotAuthorized>

    </NotAuthorized>
</AuthorizeView>


@code {
    bool _isExercise;
    MudForm _form = null!;
    string? _error;

    bool _isShow;

    Activity Activity { get; set; }

    Exercise Exercise { get; set; }

    [Parameter]
    public int ActivityId { get; set; }

    async void TryAdd(KeyboardEventArgs e)
    {
        if (e.Code is "Enter" or "NumpadEnter")
            await HandleNewExerciseAsync();
    }

    async Task HandleNewExerciseAsync()
    {
        try
        {
            if (!await _form.IsFormValidAsync()) return;
            _isExercise = true;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        finally
        {
            _isExercise = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        Activity = await ActivityRepository.GetActivityById(ActivityId);
        Exercise = await ExerciseRepository.GetExerciseByActivity(ActivityId);
    }

}