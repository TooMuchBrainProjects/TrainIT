@page "/workoutview"

<PageTitle>Workout View</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudStack Spacing="16">
                <h1 class="ms-4">Workouts</h1>

                <DataInit Data="Workouts">
                    <ChildContent Context="workouts">
                        <MudList Clickable="true">
                            @foreach (var workout in workouts)
                            {
                                <MudListItem OnClick="() => NavigateToExerciseView(workout.Id)">
                                    <MudGrid Style="min-height: 4rem;">
                                        <MudItem xs="10" Style="display: flex; align-items: center;">
                                            @workout.Name
                                        </MudItem>
                                        <MudItem xs="2" Style="display: flex; align-items: center;">
                                            <MudIconButton Icon="@Icons.Filled.Edit" OnClick="() => EditWorkout(workout.Id)"/>
                                        </MudItem>
                                    </MudGrid>
                                </MudListItem>
                            }
                        </MudList>

                        <div Style="position: fixed; bottom: 13vh; right: 2vh; display: grid; gap: 1rem;">
                            <MudFab Color="Color.Info" StartIcon="@Icons.Material.Filled.Add" OnClick="AddWorkout"/>
                        </div>
                        
                    </ChildContent>
                </DataInit>
                
            </MudStack>
        </MudContainer>
    </Authorized>
</AuthorizeView>

@code {

    [Inject]
    private IDialogService DialogService { get; set; }

    List<Workout> Workouts { get; set; } = null!;

    void EditWorkout(int workoutId)
    {
        NavigationManager.NavigateTo($"/editworkout/{workoutId}");
    }

    void NavigateToExerciseView(int workoutId)
    {
        NavigationManager.NavigateTo($"/exerciseview/{workoutId}");
    }

    async Task AddWorkout()
    {
        NavigationManager.NavigateTo($"/newworkout");
    }

    protected override async Task OnInitializedAsync()
    {
        if (await UserService.IsAuthenticated())
        {
            Workouts = await WorkoutRepository.GetWorkoutsByUser(UserService.CurrentUser!.Id);
        }
    }

}