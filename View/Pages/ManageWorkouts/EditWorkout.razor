@page "/editworkout/{SelectedDate:datetime}/{WorkoutId:int}"

<PageTitle>Edit Workout</PageTitle>

<AuthorizeView>
    <Authorized>
        <MudContainer Class="mt-8">
            <MudStack Spacing="4">
                <h1 class="ms-4 mb-12">Edit Workout</h1>

                <MudForm>
                    <MudStack Spacing="4">
                        <MudPaper class="pa-4" Elevation="3">
                            <MudTextField @bind-Value="Workout.Name" Label="Name" Variant="Variant.Outlined"
                                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.TextFormat" AdornmentColor="Color.Secondary"
                                          Counter="100" MaxLength="100"
                                          Immediate="true"/>
                        </MudPaper>
                        <MudPaper class="pa-4" Elevation="3">
                            <MudTextField @bind-Value="Workout.Description" Label="Machine" Variant="Variant.Outlined"
                                          Adornment="Adornment.Start" AdornmentIcon="@Icons.Filled.Description" AdornmentColor="Color.Secondary"
                                          Immediate="true"
                                          Lines="5"/>
                        </MudPaper>
                    </MudStack>
                </MudForm>
            </MudStack>
        </MudContainer>
        <div Style="position: fixed; bottom: 9vh; right: 2vh; display: grid; gap: 1rem;">
            <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.Check" OnClick="SaveWorkoutChanges"/>
        </div>
    </Authorized>
</AuthorizeView>

@code {

    [Parameter]
    public DateTime SelectedDate { get; set; }

    [Parameter]
    public int WorkoutId { get; set; }

    Workout Workout { get; set; } = null!;

    async Task SaveWorkoutChanges()
    {
        await WorkoutRepository.UpdateAsync(Workout);
        NavigationManager.NavigateTo($"/workoutview/{SelectedDate:yyyy-MM-dd}");
    }

    protected override async Task OnInitializedAsync()
    {
        Workout = await WorkoutRepository.GetWorkoutById(WorkoutId);
    }

}